unbind C-b
set -g prefix C-f
bind C-f send-prefix

# set-option -g default-shell /usr/bin/fish
set -g default-terminal "screen-256color"
set -as terminal-features ",alacritty*:RGB"

# Start windows and pane number with  1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Re-number windows when one is closed
set -g renumber-windows 1

# Word separators
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Show times longer than supposed
set -g display-panes-time 2000

# tmux messages are displayed for 4 seconds
set -g display-time 2000

# set tmux history limit
set -g history-limit 30000

# Faster command sequence
set -s escape-time 0

# Increase repeat timeout
set -sg repeat-time 600 

# Set focus-events
set-option -g focus-events on

# Split window vertically and horizontally, open new pane in the same directory
bind-key s split-window -h -c '#{pane_current_path}'
bind-key v split-window -v -c '#{pane_current_path}'

# Reload source file ~/.tmux.conf
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Resize all panes equally
bind-key | select-layout even-horizontal
bind-key = select-layout even-vertical

# Disable confirm killing pane
# bind-key x kill-pane

# Resize panes
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Select panes 
# NOTE(arslan): See to prevent cycling https://github.com/tmux/tmux/issues/1158
bind -n C-h if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -n C-l if -F '#{pane_at_right}'  '' 'select-pane -R'
bind -n C-k if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -n C-j if -F '#{pane_at_bottom}' '' 'select-pane -D'

# This tmux statusbar config was created by tmuxline.vim
# on Wed, 25 Nov 2015
set -g status "on"
set -g status-bg "colour236" 
set -g status-justify "left"
set -g status-position "top"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left "#[fg=colour22,bg=colour148,bold] #S #[fg=colour148,bg=colour236,nobold,nounderscore,noitalics]"
set -g status-right "#(gitmux -cfg ~/projects/dot-files/git/gitmux.yml '#{pane_current_path}') #{?client_prefix,#[bg=colour2],} #[fg=colour241,bg=colour0]ðŸ”‹#[fg=colour241,bg=colour252] #($HOME/projects/dot-files/tmux/mac-battery-percentage.sh) #[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour250,bg=colour240] %Y-%m-%d %H:%M #[fg=colour252,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour241,bg=colour252] #h "
 
setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour245,bg=colour236] #I #[fg=colour245,bg=colour236]#W "
setw -g window-status-current-format "#[fg=colour236,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour240] #I #[fg=colour231,bg=colour240]#{?window_zoomed_flag,#[fg=green][],}#W #[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]"


# List of plugins
# see this https://github.com/tmux-plugins/tpm to installation
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-urlview'
 
# enabling auto saving tmux sessions
set -g @continuum-restore 'on'

# Set inactive/ active window styles
set -g pane-border-style 'fg=colour51,bg=colour236' 
set -g pane-active-border-style 'fg=colour51,bg=colour236'
set -g window-active-style 'fg=terminal,bg=terminal'
set -g window-style 'fg=colour247,bg=colour236'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Turn vi binding copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Copy in copy mode like vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# Popup window for quick action
bind-key -n 'M-Enter' display-menu -T 'Please choose:' \
      "Watch default pods" D "display-popup -EE 'watch kubectl get pods'" \
      "Watch kube-system pods" K "display-popup -EE 'watch kubectl get pods -n kube-system'" \
      "Copy name of a K8s pod" P "display-popup -EE 'fish -c cpd'" \
      "" \
      "System task manager" H "display-popup -EE -h 80% -w 80% htop" \
      "New terminal" n "display-popup -EE -h 80% -w 80%" \
      "" \
      "Run all test (Kotlin mS)" T "send-keys './gradlew.local :test --info' 'Enter'" \
      "Build project (Kotlin mS)" B "send-keys './gradlew.local :testClasses --info' 'Enter'" \

